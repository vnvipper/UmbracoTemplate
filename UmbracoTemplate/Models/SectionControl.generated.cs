//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace UmbracoTemplate.Models
{
	// Mixin content Type 1200 with alias "sectionControl"
	/// <summary>Section Control</summary>
	public partial interface ISectionControl : IPublishedContent
	{
		/// <summary>Description</summary>
		IHtmlString SectionDescription { get; }

		/// <summary>Subtitle</summary>
		string SectionSubtitle { get; }

		/// <summary>Title</summary>
		string SectionTitle { get; }
	}

	/// <summary>Section Control</summary>
	[PublishedContentModel("sectionControl")]
	public partial class SectionControl : PublishedContentModel, ISectionControl
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "sectionControl";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SectionControl(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SectionControl, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Description
		///</summary>
		[ImplementPropertyType("sectionDescription")]
		public IHtmlString SectionDescription
		{
			get { return GetSectionDescription(this); }
		}

		/// <summary>Static getter for Description</summary>
		public static IHtmlString GetSectionDescription(ISectionControl that) { return that.GetPropertyValue<IHtmlString>("sectionDescription"); }

		///<summary>
		/// Subtitle
		///</summary>
		[ImplementPropertyType("sectionSubtitle")]
		public string SectionSubtitle
		{
			get { return GetSectionSubtitle(this); }
		}

		/// <summary>Static getter for Subtitle</summary>
		public static string GetSectionSubtitle(ISectionControl that) { return that.GetPropertyValue<string>("sectionSubtitle"); }

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("sectionTitle")]
		public string SectionTitle
		{
			get { return GetSectionTitle(this); }
		}

		/// <summary>Static getter for Title</summary>
		public static string GetSectionTitle(ISectionControl that) { return that.GetPropertyValue<string>("sectionTitle"); }
	}
}
