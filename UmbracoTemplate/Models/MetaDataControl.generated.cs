//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace UmbracoTemplate.Models
{
	// Mixin content Type 1122 with alias "metaDataControl"
	/// <summary>Meta Data Control</summary>
	public partial interface IMetaDataControl : IPublishedContent
	{
		/// <summary>Browser Title</summary>
		string BrowserTitle { get; }

		/// <summary>Exclude From Top Navigation</summary>
		bool ExcludeFromTopNavigation { get; }

		/// <summary>Keywords</summary>
		IEnumerable<string> Keywords { get; }

		/// <summary>Description</summary>
		string SeoMetaDescription { get; }

		/// <summary>Social Image Sharing</summary>
		IPublishedContent SocialImageSharing { get; }
	}

	/// <summary>Meta Data Control</summary>
	[PublishedContentModel("metaDataControl")]
	public partial class MetaDataControl : PublishedContentModel, IMetaDataControl
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "metaDataControl";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public MetaDataControl(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<MetaDataControl, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Browser Title
		///</summary>
		[ImplementPropertyType("browserTitle")]
		public string BrowserTitle
		{
			get { return GetBrowserTitle(this); }
		}

		/// <summary>Static getter for Browser Title</summary>
		public static string GetBrowserTitle(IMetaDataControl that) { return that.GetPropertyValue<string>("browserTitle"); }

		///<summary>
		/// Exclude From Top Navigation
		///</summary>
		[ImplementPropertyType("excludeFromTopNavigation")]
		public bool ExcludeFromTopNavigation
		{
			get { return GetExcludeFromTopNavigation(this); }
		}

		/// <summary>Static getter for Exclude From Top Navigation</summary>
		public static bool GetExcludeFromTopNavigation(IMetaDataControl that) { return that.GetPropertyValue<bool>("excludeFromTopNavigation"); }

		///<summary>
		/// Keywords: Keywords that describe the content of the page. This is consired optional since most modern search engines don't use this anymore
		///</summary>
		[ImplementPropertyType("keywords")]
		public IEnumerable<string> Keywords
		{
			get { return GetKeywords(this); }
		}

		/// <summary>Static getter for Keywords</summary>
		public static IEnumerable<string> GetKeywords(IMetaDataControl that) { return that.GetPropertyValue<IEnumerable<string>>("keywords"); }

		///<summary>
		/// Description: A brief description of the content on your page. This text is shown below the title in a google search result and also used for Social Sharing Cards. The ideal length is between 130 and 155 characters
		///</summary>
		[ImplementPropertyType("seoMetaDescription")]
		public string SeoMetaDescription
		{
			get { return GetSeoMetaDescription(this); }
		}

		/// <summary>Static getter for Description</summary>
		public static string GetSeoMetaDescription(IMetaDataControl that) { return that.GetPropertyValue<string>("seoMetaDescription"); }

		///<summary>
		/// Social Image Sharing
		///</summary>
		[ImplementPropertyType("socialImageSharing")]
		public IPublishedContent SocialImageSharing
		{
			get { return GetSocialImageSharing(this); }
		}

		/// <summary>Static getter for Social Image Sharing</summary>
		public static IPublishedContent GetSocialImageSharing(IMetaDataControl that) { return that.GetPropertyValue<IPublishedContent>("socialImageSharing"); }
	}
}
